basePath: /
consumes:
- application/json
definitions:
  LoginResponse:
    description: LoginResponse defines the struct for API login
    properties:
      message:
        description: Contains user information
        properties:
          email:
            description: the user's email address
            type: string
            x-go-name: Email
          firstname:
            description: the user's first name
            type: string
            x-go-name: FirstName
          id:
            description: the user's id
            type: string
            x-go-name: ID
          lastname:
            description: the user's last name
            type: string
            x-go-name: LastName
          password:
            description: the user's hashed password
            type: string
            x-go-name: PassWord
        type: object
        x-go-name: Message
      status:
        description: shows if process was successful or not
        type: boolean
        x-go-name: Status
      token:
        description: A unique number that defines authenticates the users transactions
        type: string
        x-go-name: Token
    type: object
    x-go-package: github.com/IamNator/mysql-golang-web/session
  MyStdResp:
    properties:
      message:
        description: delete message / error message when delete is unsuccessful
        type: string
        x-go-name: Message
      status:
        description: successful / not successful
        type: boolean
        x-go-name: Status
    type: object
    x-go-package: github.com/IamNator/mysql-golang-web/controllers
  PhoneBookContact:
    properties:
      firstname:
        type: string
        x-go-name: FirstName
      id:
        type: string
        x-go-name: ID
      lastname:
        type: string
        x-go-name: LastName
      phone_number:
        type: string
        x-go-name: PhoneNumber
    type: object
    x-go-package: github.com/IamNator/mysql-golang-web/models
info:
  contact:
    email: natverior1@gmail.com
  description: Documentation for delete API
  title: delete API
  version: 1.0.0
paths:
  /api/delete:
    delete:
      description: delete contact from phone book
      operationId: delete
      responses:
        "200":
          $ref: '#/responses/deleteResponse'
      tags:
      - controllers
  /api/fetch:
    post:
      description: returns all phonebook contacts
      operationId: fetch
      responses:
        "200":
          $ref: '#/responses/fetchResponse'
      tags:
      - controllers
  /api/login:
    post:
      description: Returns a session token
      operationId: login
      responses:
        "200":
          $ref: '#/responses/loginResponse'
        "404":
          $ref: '#/responses/loginNotFound'
      tags:
      - session
  /api/logout:
    post:
      description: logs the user out
      operationId: logout
      responses:
        "200":
          $ref: '#/responses/logoutResponse'
      tags:
      - session
  /api/register:
    post:
      description: adds new user to user database
      operationId: register
      responses:
        "200":
          $ref: '#/responses/registerResponse'
      tags:
      - session
  /api/update:
    post:
      description: adds new contacts to a phoneBook
      operationId: update
      responses:
        "200":
          $ref: '#/responses/updateResponse'
      tags:
      - controllers
produces:
- application/json
responses:
  deleteResponse:
    description: ""
    schema:
      $ref: '#/definitions/MyStdResp'
  fetchResponse:
    description: ""
    headers:
      Body:
        description: in body
    schema:
      properties:
        message:
          items:
            $ref: '#/definitions/PhoneBookContact'
          type: array
          x-go-name: Message
        status:
          type: boolean
          x-go-name: Status
      type: object
  loginNotFound:
    description: Non registered user tries to login
    schema:
      $ref: '#/definitions/MyStdResp'
  loginResponse:
    description: Successful login request
    schema:
      $ref: '#/definitions/LoginResponse'
  logoutResponse:
    description: ""
    schema:
      $ref: '#/definitions/MyStdResp'
  registerResponse:
    description: ""
    schema:
      $ref: '#/definitions/MyStdResp'
  updateResponse:
    description: ""
    schema:
      properties:
        message:
          type: string
          x-go-name: Message
        status:
          type: boolean
          x-go-name: Status
      type: object
schemes:
- http
swagger: "2.0"
